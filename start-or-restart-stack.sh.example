#!/bin/bash
# starts, or restarts, the docker stack
set -euo pipefail
cd `dirname "$0"`

# public DNS that this app responds to (when behind Nginx)
export WEBAPP_PUBLIC_DNS=staging.app.pollin8.org.au

# Email LetsEncrypt SSL certs expiry notifications are sent to
export LETSENCRYPT_EMAIL=you@whatever.blah

# Set this to be the post_server_item token from your Rollbar.com account, so we can report errors from the server
export ROLLBAR_SERVER_TOKEN=63f11edc2d494baaaabbbbbccccc98b1  # TODO change me

# Set this to be the post_client_item token from your Rollbar.com account, so we can report errors from clients
export ROLLBAR_CLIENT_TOKEN=63f11edc2d494beeefffff11112222b1  # TODO change me

# Name of the environment that we're deploying to
export DEPLOYED_TO_ENV=staging # TODO change to 'production' when appropriate

# Secret that Socket.IO uses under the covers. We just generate something random-ish
export SOCKETIO_SECRET=`uuidgen`

# Run stack in "local dev" mode. Use this mode on your local dev machine and
# comment out for anywhere you have a publicly resolvable DNS (so certs can be
# minted). In "local dev" mode we have snake-oil certs so you'll have to make
# exceptions for them in your browser.
DC_OVERRIDE_FRAGMENT='--file docker-compose.yml --file docker-compose.local-dev.yml'

echo "[INFO] $(date) - starting stack for env=${DEPLOYED_TO_ENV}"
docker-compose up -d $@
echo '[INFO] stack started'
